const processModifyAction = async (processId: number) : Promise<void> => {
  const processOk = await verificationProcessAPI(processId);
  if (!processOk) {
    return await void deleteProcessAPI(processId);
  }

  return await void updateProcessAPI(processId);
}

// 1. Из названия функций подозреваю, что они асинхронные и вероятно должны выполниться
// последовательно(каждая следующая дожидаясь выполнения предыдущей).
// Если оставить как есть, то мы рискуем сначала удалить процесс, а затем верифицировать его
// и удалить.
// В качестве решения можно использовать цепочку promises. Либо более лаконичное решение с async/await

// 2. У этого блока кода, нет функции. Есть риск, что он выполнится при инициализации проекта, хотя
// мы хотели бы чтобы он выполнялся после нажатия на кнопку(как вариант). Нужно обернуть в функцию и
// вызвать по назначению. Функцию можно назвать как processModifyAction - и она асинхронная

// 3. Не ясно, с каким процессом происходят все эти манипуляции. Вероятно нужен идентификатор процесса

// 4. В какой-то момент исходя из названий функций стало ясно, что запустить их последовательно несколько
// странно - "верифицируем процесс, затем обновляем и затем сразу удаляем". Что-то тут не так...
// Скорее всего должна быть какая-то логика, вроде - если процесс ок мы его обновляем, иначе удаляем.
// Учитывая, что это просто бизнес логика, наша новая функция враппер не должна возвращать, что-то
// осмысленное - просто делает какую-то логику как процедура
